name: Publish Docker Image (Frontend)

on:
  push:
    paths:
      - .github/workflows/frontend-docker.yml
      - frontend/**
  workflow_dispatch:
    inputs:
      skip_build_publish:
        description: "Skip the build and publish step"
        required: false
        default: false
        type: boolean

jobs:
  build-publish:
    runs-on: ubuntu-latest
    name: Build Frontend Docker Image
    steps:
      - name: Clone repository
        uses: actions/checkout@v4
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}

      - name: Setup docker buildx
        uses: docker/setup-buildx-action@v3.7.1
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}

      - name: Fetch app version
        working-directory: frontend
        id: fetch_version
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "version=${VERSION}" >> $GITHUB_OUTPUT

      - name: Login to GHCR
        uses: docker/login-action@v3.3.0
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
        with:
          registry: ghcr.io
          username: vlsts
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build docker image
        uses: docker/build-push-action@v6.10.0
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
        with:
          context: frontend
          file: frontend/Dockerfile
          push: true
          labels: |
            org.opencontainers.image.source=https://github.com/vlsts/expensy
            org.opencontainers.image.url=https://github.com/vlsts/expensy
            org.opencontainers.image.title="Expensy frontend website"
            org.opencontainers.image.description="Frontend for the Expensy project."
          tags: ghcr.io/vlsts/expensy-frontend:latest,ghcr.io/vlsts/expensy-frontend:${{ steps.fetch_version.outputs.version }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-publish
    name: Deploy Frontend to DigitalOcean
    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Deploy docker image to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: "expensy.ro"
          username: "expensyadmin"
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            docker pull ghcr.io/vlsts/expensy-frontend:latest
            docker stop expensy-frontend || true
            docker rm expensy-frontend || true
            docker run -d \
              --name expensy-frontend \
              -e PUBLIC_CORBADO_PROJECT_ID="${{ secrets.PROJECT_ID }}" \
              -e PUBLIC_CORBADO_SUPPORT_MAIL="${{ secrets.CONTACT_MAIL }}" \
              -p 8080:80 \
              ghcr.io/vlsts/expensy-frontend:latest

      - name: Make Configs folder
        uses: appleboy/ssh-action@master
        with:
          host: "expensy.ro"
          username: "expensyadmin"
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            mkdir -p ~/expensy_configs

      - name: Copy Caddyfile to DigitalOcean
        uses: appleboy/scp-action@master
        with:
          host: "expensy.ro"
          username: "expensyadmin"
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          source: "frontend/Caddyfile"
          target: "~/expensy_configs/"

      - name: Move Caddyfile and restart
        uses: appleboy/ssh-action@master
        with:
          host: "expensy.ro"
          username: "expensyadmin"
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            sudo mv ~/expensy_configs/frontend/Caddyfile /etc/caddy/Caddyfile
            sudo systemctl restart caddy
