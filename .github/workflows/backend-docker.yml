name: Publish Docker Image (Backend)

on: 
    push:
        paths: 
            - .github/workflows/backend-docker.yml
            - backend/**
    workflow_dispatch:
      inputs:
        skip_build_publish:
          description: 'Skip the build and publish step'
          required: false
          default: false
          type: boolean

jobs:
    build-publish:
        runs-on: ubuntu-latest
        name: Build Docker Image
        steps:
            - name: Clone repository
              uses: actions/checkout@v4
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}

            - name: Setup docker buildx
              uses: docker/setup-buildx-action@v3.7.1
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}

            - name: Setup node.js
              uses: actions/setup-node@v4
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
              with:
                node-version: 'latest'

            - name: Fetch app version
              working-directory: backend
              id: fetch_version
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
              run: |
                VERSION=$(jq -r '.version' package.json)
                echo "version=${VERSION}" >> $GITHUB_OUTPUT

            - name: Login to GHCR
              uses: docker/login-action@v3.3.0
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
              with:
                registry: ghcr.io
                username: vlsts
                password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build docker image
              uses: docker/build-push-action@v6.10.0
              if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.skip_build_publish == 'false')}}
              with:
                context: backend
                file: backend/Dockerfile
                push: true
                labels: |
                  org.opencontainers.image.source=https://github.com/vlsts/expensy
                  org.opencontainers.image.url=https://github.com/vlsts/expensy
                  org.opencontainers.image.title="Expensy backend server"
                  org.opencontainers.image.description="Backend for the Expensy project."
                tags: ghcr.io/vlsts/expensy-backend:latest,ghcr.io/vlsts/expensy-backend:${{ steps.fetch_version.outputs.version }}
    deploy:
      runs-on: ubuntu-latest
      needs: build-publish
      name: Deploy to DigitalOcean
      steps:
        - name: Clone repository
          uses: actions/checkout@v4

        - name: Deploy docker image to DigitalOcean
          uses: appleboy/ssh-action@master
          with:
            host: "backend.expensy.ro"
            username: "expensyadmin"
            key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
            # test db host env var
            script: |
              docker pull ghcr.io/vlsts/expensy-backend:latest
              docker stop expensy-backend || true
              docker rm expensy-backend || true
              docker run -d \
                --name expensy-backend \
                -p 8080:80 \
                -e DB_HOST="db.expensy.ro" \
                -e DB_USERNAME=expensyadmin
                -e DB_PASSWORD=${{secrets.MONGODB_PASSWORD}}
                ghcr.io/vlsts/expensy-backend:latest

        - name: Make Configs folder
          uses: appleboy/ssh-action@master
          with:
            host: "backend.expensy.ro"
            username: "expensyadmin"
            key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
            script: |
              mkdir -p ~/expensy_configs

        - name: Copy Caddyfile to DigitalOcean
          uses: appleboy/scp-action@master
          with:
            host: "backend.expensy.ro"
            username: "expensyadmin"
            key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
            source: "backend/Caddyfile"
            target: "~/expensy_configs/"

        - name: Move Caddyfile and restart
          uses: appleboy/ssh-action@master
          with:
            host: "backend.expensy.ro"
            username: "expensyadmin"
            key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
            script: |
              sudo mv ~/expensy_configs/backend/Caddyfile /etc/caddy/Caddyfile
              sudo systemctl restart caddy

